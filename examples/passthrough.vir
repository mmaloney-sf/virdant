// vim: ft=bitsy
pub mod Top {
  input clk : Clock;

  output out : UInt<8>;
  input in : UInt<8>;

  reg r : UInt<8> on clk;

  r <= in->add(1);
  out := r;
}

/*

virdant.module @Top {
  %clk = virdant.input : virdant.clock

  %in = virdant.input : virdant.uint<8>

  %out = virdant.output : virdant.uint<8> {
    virdant.connect(%r)
  }

  %r = virdant.reg(%clock) {
    %const_1 = virdant.const 1 : UInt<8>
    %result = virdant.add(%in, %const_1)
    virdant.connect(%result)
  }
}


Ops Summary:

  virdant.module
    declares a module.
    Inside is a list of all the components.
    the inside is a graph region.

  virdant.input
    declares an input port

  virdant.output
    declares an output port
    has an SSA region that represents the right-hand side of the := statement.

  virdant.reg
    declares a reg

  virdant.wire
    declares a wire

  virdant.connect
    a terminator for the SSA blocks for virdant.output, virdant.reg, virdant.wire

*/
